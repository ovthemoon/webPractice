{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project_Web\\\\ReactPractice\\\\pratice\\\\src\\\\routes\\\\Detail.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Detail() {\n  _s();\n  // useParams() returns an object of key/value pairs of URL parameters.\n  const {\n    id\n  } = useParams();\n  const [isLoading, setLoadingState] = useState(true);\n  const [movie, setMovie] = useState(null);\n  const getMovie = async () => {\n    const json = await (await fetch(\"https://yts.mx/api/v2/movie_details.json?movie_id=\" + id)).json();\n    console.log(json);\n    setMovie(json.data.movie);\n    setLoadingState(false);\n  };\n  useEffect(() => {\n    getMovie();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.medium_cover_image,\n        alt: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Published in \", movie.year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: movie.genres.map(g => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: g\n        }, g, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 43\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: movie.description_full\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 47\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(Detail, \"qPKXHAjEq3lNd4D/Il9IO5nkILo=\", false, function () {\n  return [useParams];\n});\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["useParams","useEffect","useState","jsxDEV","_jsxDEV","Detail","_s","id","isLoading","setLoadingState","movie","setMovie","getMovie","json","fetch","console","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","src","medium_cover_image","alt","title","year","genres","map","g","description_full","_c","$RefreshReg$"],"sources":["E:/Project_Web/ReactPractice/pratice/src/routes/Detail.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useEffect,useState } from \"react\";\nfunction Detail() {\n    // useParams() returns an object of key/value pairs of URL parameters.\n    const { id } = useParams();\n    const [isLoading,setLoadingState]=useState(true);\n    const [movie,setMovie]=useState(null);\n    const getMovie = async () => {\n        const json=await (await fetch(\"https://yts.mx/api/v2/movie_details.json?movie_id=\" + id)).json();\n        console.log(json);\n        setMovie(json.data.movie);\n        setLoadingState(false);\n    };\n\n    useEffect(() => {\n        getMovie();\n    },[])\n    return (\n        <div>\n            {isLoading ? <h1>Loading...</h1> :<div>\n            <img src={movie.medium_cover_image} alt={movie.title} />\n            <h1>{movie.title}</h1>\n            <h2>Published in {movie.year}</h2>\n            <ul>\n                {movie.genres.map((g) => (<li key={g}>{g}</li>))}\n            </ul>\n            <p>{movie.description_full}</p>\n            \n            </div>}\n        </div>\n    );\n}\n\nexport default Detail;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,SAAS,EAACC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd;EACA,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACQ,SAAS,EAACC,eAAe,CAAC,GAACP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,KAAK,EAACC,QAAQ,CAAC,GAACT,QAAQ,CAAC,IAAI,CAAC;EACrC,MAAMU,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAMC,IAAI,GAAC,MAAM,CAAC,MAAMC,KAAK,CAAC,oDAAoD,GAAGP,EAAE,CAAC,EAAEM,IAAI,CAAC,CAAC;IAChGE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjBF,QAAQ,CAACE,IAAI,CAACI,IAAI,CAACP,KAAK,CAAC;IACzBD,eAAe,CAAC,KAAK,CAAC;EAC1B,CAAC;EAEDR,SAAS,CAAC,MAAM;IACZW,QAAQ,CAAC,CAAC;EACd,CAAC,EAAC,EAAE,CAAC;EACL,oBACIR,OAAA;IAAAc,QAAA,EACKV,SAAS,gBAAGJ,OAAA;MAAAc,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAAElB,OAAA;MAAAc,QAAA,gBAClCd,OAAA;QAAKmB,GAAG,EAAEb,KAAK,CAACc,kBAAmB;QAACC,GAAG,EAAEf,KAAK,CAACgB;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxDlB,OAAA;QAAAc,QAAA,EAAKR,KAAK,CAACgB;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtBlB,OAAA;QAAAc,QAAA,GAAI,eAAa,EAACR,KAAK,CAACiB,IAAI;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClClB,OAAA;QAAAc,QAAA,EACKR,KAAK,CAACkB,MAAM,CAACC,GAAG,CAAEC,CAAC,iBAAM1B,OAAA;UAAAc,QAAA,EAAaY;QAAC,GAALA,CAAC;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACLlB,OAAA;QAAAc,QAAA,EAAIR,KAAK,CAACqB;MAAgB;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE1B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAChB,EAAA,CA7BQD,MAAM;EAAA,QAEIL,SAAS;AAAA;AAAAgC,EAAA,GAFnB3B,MAAM;AA+Bf,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}